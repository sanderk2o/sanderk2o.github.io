{"version":3,"sources":["index.js"],"names":["App","getSquares","array","birthday","Date","state","date","today","weeksLived","Math","round","i","push","className","onBirthDateChange","setState","this","BirthDate","onXXX","React","Component","type","name","onChange","event","props","target","value","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iNAIMA,G,wDACJ,aAAe,IAAD,8BACZ,gBAMFC,WAAa,WAOX,IANA,IAAMC,EAAQ,GAEVC,EAAW,IAAIC,KAAK,EAAKC,MAAMC,MAC/BC,EAAQ,IAAIH,KACZI,EAAaC,KAAKC,OAAOH,EAAQJ,GAAY,QAEzCQ,EAAI,EAAGA,GALiB,KAKeA,IACzCA,GAAKH,EACPN,EAAMU,KACJ,wBAAQC,UAAU,mBAEpBX,EAAMU,KACJ,wBAAQC,UAAU,kBAMxB,OAHAX,EAAMU,KACJ,6CAEKV,GA1BK,EA6BdY,kBAAoB,SAACR,GACnB,EAAKS,SAAS,CACZT,KAAMA,KA7BR,EAAKD,MAAQ,CACXC,KAAM,MAHI,E,qDAoCZ,OAAIU,KAAKX,MAAMC,KAEX,gCACE,oDACA,cAACW,EAAD,CACEC,MAAOF,KAAKF,oBAEd,qBAAKD,UAAU,YAAf,SACGG,KAAKf,kBAMZ,gCACE,oDACA,cAACgB,EAAD,CACEC,MAAOF,KAAKF,2B,GAtDJK,IAAMC,YA6DlBH,E,uKACM,IAAD,OACP,OACE,gCACE,wDACA,+BACE,gCACE,uBAAOI,KAAK,OAAOC,KAAK,aAAaC,SAAU,SAACC,GAC9C,EAAKC,MAAMP,MAAMM,EAAME,OAAOC,qB,GARpBR,IAAMC,WAiBxBQ,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAChC,EAAD,IAAQ4B,K","file":"static/js/main.e9f105a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './index.css';\r\n\r\nclass App extends React.Component{\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      date: null\r\n    }\r\n  }\r\n\r\n  getSquares = () => {\r\n    const array = []\r\n    var expectedLifeLengthInWeeks = 4680  // 90 years\r\n    var birthday = new Date(this.state.date);\r\n    var today = new Date();\r\n    var weeksLived = Math.round((today - birthday) / 604800000); \r\n\r\n    for(var i = 1; i <= expectedLifeLengthInWeeks; i++){\r\n      if (i <= weeksLived) {\r\n        array.push(\r\n          <button className=\"filled-square\"></button>)\r\n      } else {\r\n        array.push(\r\n          <button className=\"empty-square\"></button>)\r\n      }\r\n    }\r\n    array.push(\r\n      <h3> 90 years </h3>\r\n    )\r\n    return array\r\n  }\r\n\r\n  onBirthDateChange = (date) => {\r\n    this.setState({\r\n      date: date\r\n    })\r\n  }\r\n\r\n  render(){\r\n    if (this.state.date) {\r\n      return(\r\n        <div>\r\n          <h1>Your life in weeks</h1>\r\n          <BirthDate \r\n            onXXX={this.onBirthDateChange}\r\n          />\r\n          <div className=\"board-row\">\r\n            {this.getSquares()}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    return(\r\n      <div>\r\n        <h1>Your life in weeks</h1>\r\n        <BirthDate \r\n          onXXX={this.onBirthDateChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass BirthDate extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Choose your birth date</h2>\r\n        <form>\r\n          <label>\r\n            <input type=\"date\" name=\"birth-date\" onChange={(event) => {\r\n              this.props.onXXX(event.target.value)\r\n            }} />\r\n          </label>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App/>, rootElement);"],"sourceRoot":""}